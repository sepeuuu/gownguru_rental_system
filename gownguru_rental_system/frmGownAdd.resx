<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /R8AAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>